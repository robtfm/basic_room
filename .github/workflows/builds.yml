# Copyright 2023 LiveKit, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Builds

on:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            target: x86_64-apple-darwin


    name: Build (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install linux dependencies
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.target != 'aarch64-unknown-linux-gnu' }}
        run: |
          sudo apt update -y
          sudo apt install -y libssl-dev libx11-dev libgl1-mesa-dev libxext-dev

      - name: Set up QEMU
        if: ${{ matrix.target == 'aarch64-unknown-linux-gnu' }}
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        if: ${{ matrix.target == 'aarch64-unknown-linux-gnu' }}
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        if: ${{ matrix.target == 'aarch64-unknown-linux-gnu' }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Build (Cargo)
        if: ${{ !contains(matrix.target, 'android') && matrix.target != 'aarch64-unknown-linux-gnu' }}
        run: |
          cargo build --release --workspace -p livekit --target ${{ matrix.target }}

      - name: Build (Docker)
        if: ${{ matrix.target == 'aarch64-unknown-linux-gnu' }}
        run: |
          docker buildx create --use
          docker buildx build --platform linux/arm64 --load -t lk-arm64:latest -f .github/aarch64-docker.dockerfile .
          docker run --rm -v "$(pwd)":/usr/src/app -w /usr/src/app lk-arm64:latest cargo build --release --target aarch64-unknown-linux-gnu

      - name: Build (Android)
        if: ${{ contains(matrix.target, 'android') }}
        run: |
          cargo install cargo-ndk
          cargo ndk --target ${{ matrix.target }} build --release -p livekit --workspace -vv

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3    